@page "/todo"
@rendermode InteractiveServer
<h3>Todos: (@todos.Count(todo => !todo.IsDone))</h3> @*check for todo that are not checked*@

<style>
    .no-bullets {
        list-style-type: none;
    }
</style>

<ul class="no-bullets">
    @foreach (var todo in todos) { //for eaach todo, do this:
        @* <li>@todo.Title</li> *@
        <li>
            <input type='checkbox' @bind='todo.IsDone' />
            <input @bind='todo.Title' />
        </li>
    }
</ul>


<input placeholder='Something todo' @bind='newTodo'> <!-- binds input data to newTodo -->
<button @onclick='AddTodo'>Add</button> <!-- listens for button click -->

@code {
    private string? newTodo;

    private List<TodoListItem.TodoItem> todos = new();

private void AddTodo() { //declare a private method 'addTodo'
    //add the todo
    if (!string.IsNullOrWhiteSpace(newTodo)) { <!-- checks if the newTodo string is not (!) null, empty, or contains only whitespace characters  -->
        todos.Add(new TodoListItem.TodoItem {Title = newTodo}); //adds a 'new' TodoItem setting the Title to 'newTodo'
        newTodo = string.Empty; //deletes previous input allowing for a new input
    }
}
}
